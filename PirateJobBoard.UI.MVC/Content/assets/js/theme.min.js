"use strict"; function ownKeys(e, t) { var r = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); t && (o = o.filter(function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable })), r.push.apply(r, o) } return r } function _objectSpread(e) { for (var t = 1; t < arguments.length; t++) { var r = null != arguments[t] ? arguments[t] : {}; t % 2 ? ownKeys(Object(r), !0).forEach(function (t) { _defineProperty(e, t, r[t]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : ownKeys(Object(r)).forEach(function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t)) }) } return e } function _defineProperty(e, t, r) { return t in e ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = r, e } var docReady = function (e) { "loading" === document.readyState ? document.addEventListener("DOMContentLoaded", e) : setTimeout(e, 1) }, resize = function (e) { return window.addEventListener("resize", e) }, isIterableArray = function (e) { return Array.isArray(e) && !!e.length }, camelize = function (e) { var t = e.replace(/[-_\s.]+(.)?/g, function (e, t) { return t ? t.toUpperCase() : "" }); return "".concat(t.substr(0, 1).toLowerCase()).concat(t.substr(1)) }, getData = function (e, t) { try { return JSON.parse(e.dataset[camelize(t)]) } catch (r) { return e.dataset[camelize(t)] } }, hexToRgb = function (e) { var t; t = 0 === e.indexOf("#") ? e.substring(1) : e; var r = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, function (e, t, r, o) { return t + t + r + r + o + o })); return r ? [parseInt(r[1], 16), parseInt(r[2], 16), parseInt(r[3], 16)] : null }, rgbaColor = function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "#fff", t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .5; return "rgba(".concat(hexToRgb(e), ", ").concat(t, ")") }, colors = { primary: "#0057FF", secondary: "#748194", success: "#00d27a", info: "#27bcfd", warning: "#f5803e", danger: "#e63757", light: "#f9fafd", dark: "#000" }, grays = { white: "#fff", 100: "#f9fafd", 200: "#edf2f9", 300: "#d8e2ef", 400: "#b6c1d2", 500: "#9da9bb", 600: "#748194", 700: "#5e6e82", 800: "#4d5969", 900: "#344050", 1000: "#232e3c", 1100: "#0b1727", black: "#000" }, hasClass = function (e, t) { return e.classList.value.includes(t) }, addClass = function (e, t) { e.classList.add(t) }, getOffset = function (e) { var t = e.getBoundingClientRect(), r = window.pageXOffset || document.documentElement.scrollLeft, o = window.pageYOffset || document.documentElement.scrollTop; return { top: t.top + o, left: t.left + r } }, isScrolledIntoView = function (e) { for (var t = e.offsetTop, r = e.offsetLeft, o = e.offsetWidth, n = e.offsetHeight; e.offsetParent;)t += (e = e.offsetParent).offsetTop, r += e.offsetLeft; return { all: t >= window.pageYOffset && r >= window.pageXOffset && t + n <= window.pageYOffset + window.innerHeight && r + o <= window.pageXOffset + window.innerWidth, partial: t < window.pageYOffset + window.innerHeight && r < window.pageXOffset + window.innerWidth && t + n > window.pageYOffset && r + o > window.pageXOffset } }, breakpoints = { xs: 0, sm: 576, md: 768, lg: 992, xl: 1200, xxl: 1540 }, getBreakpoint = function (e) { var t, r = e && e.classList.value; return r && (t = breakpoints[r.split(" ").filter(function (e) { return e.includes("navbar-expand-") }).pop().split("-").pop()]), t }, setCookie = function (e, t, r) { var o = new Date; o.setTime(o.getTime() + r), document.cookie = "".concat(e, "=").concat(t, ";expires=").concat(o.toUTCString()) }, getCookie = function (e) { var t = document.cookie.match("(^|;) ?".concat(e, "=([^;]*)(;|$)")); return t ? t[2] : t }, settings = { tinymce: { theme: "oxide" }, chart: { borderColor: "rgba(255, 255, 255, 0.8)" } }, newChart = function (e, t) { var r = e.getContext("2d"); return new window.Chart(r, t) }, getItemFromStore = function (e, t) { var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : localStorage; try { return JSON.parse(r.getItem(e)) || t } catch (o) { return r.getItem(e) || t } }, setItemToStore = function (e, t) { return (arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : localStorage).setItem(e, t) }, getStoreSpace = function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : localStorage; return parseFloat((escape(encodeURIComponent(JSON.stringify(e))).length / 1048576).toFixed(2)) }, utils = { docReady: docReady, resize: resize, isIterableArray: isIterableArray, camelize: camelize, getData: getData, hasClass: hasClass, addClass: addClass, hexToRgb: hexToRgb, rgbaColor: rgbaColor, colors: colors, grays: grays, getOffset: getOffset, isScrolledIntoView: isScrolledIntoView, getBreakpoint: getBreakpoint, setCookie: setCookie, getCookie: getCookie, newChart: newChart, settings: settings, getItemFromStore: getItemFromStore, setItemToStore: setItemToStore, getStoreSpace: getStoreSpace }, detectorInit = function () { var e = window.is, t = document.querySelector("html"); e.opera() && addClass(t, "opera"), e.mobile() && addClass(t, "mobile"), e.firefox() && addClass(t, "firefox"), e.safari() && addClass(t, "safari"), e.ios() && addClass(t, "ios"), e.iphone() && addClass(t, "iphone"), e.ipad() && addClass(t, "ipad"), e.ie() && addClass(t, "ie"), e.edge() && addClass(t, "edge"), e.chrome() && addClass(t, "chrome"), e.mac() && addClass(t, "osx"), e.windows() && addClass(t, "windows"), navigator.userAgent.match("CriOS") && addClass(t, "chrome") }; docReady(navbarInit), docReady(detectorInit);